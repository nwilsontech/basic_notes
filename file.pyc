def flatten_geojson_generator(geojson):
    """
    Generator to flatten GeoJSON FeatureCollection into individual flattened records.
    Each feature in the 'features' array is expanded into its own flattened record.
    """
    def _flatten(obj, prefix=''):
        flat = {}
        for key, value in obj.items():
            new_key = f"{prefix}{key}" if prefix else key

            if isinstance(value, dict):
                flat.update(_flatten(value, f"{new_key}."))
            elif not isinstance(value, list):
                flat[new_key] = value
        return flat

    # Ensure the GeoJSON is a FeatureCollection
    if geojson.get("type") != "FeatureCollection":
        raise ValueError("The input GeoJSON must be a FeatureCollection.")

    # Flatten the base object (everything except the 'features' array)
    base_flat = _flatten({k: v for k, v in geojson.items() if k != "features"})

    # Process each feature in the 'features' array
    for feature in geojson.get("features", []):
        # Flatten the feature itself
        feature_flat = _flatten(feature, "feature.")

        # Combine the base GeoJSON with the flattened feature
        combined = base_flat.copy()
        combined.update(feature_flat)

        yield combined
